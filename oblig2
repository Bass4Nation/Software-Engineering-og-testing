Dette er en individuell oppgave.

Frem til 1582 var den julianske kalenderen utbredt og definerte skuddår som hver årstall delelig med fire. Imidlertid ble det sent i det 16. århundre funnet at kalenderåret hadde forskjøvet seg fra solåret med omtrent 10 dager. Den gregorianske kalenderen ble definert for å tynne ut antall skuddår og dermed følge solåret mer nøyaktig. Den ble tatt i bruk i katolske land 15. oktober 1582 og man hoppet 10 dager fra den julianske kalenderdatoen. I Norge ble kalenderen tatt i bruk i 1700 ved at de elleve datoene mellom søndag 18. februar og mandag 1. mars ble droppet. 

Den gregorianske kalenderen er temmelig nøyaktig, men kunne blitt enda mer nøyaktig ved å legge til en ekstra regel som eliminerer år delbare på 4000.

 

Brukerhistorien:

Som en bruker

Ønsker jeg å vite om et år er et skuddår

Slik at jeg kan planlegge for en ekstra dag 29. februar disse årene.

 

Akseptansekriterier:

Et år er et skuddår

Når det er delelig med 4, men ikke 100
Når det er delelig med 400
(For eksempel var år 2000 et skuddår)
Et år er ikke et skuddår

Når det ikke er delelig med 4
Når det er delelig med 100, men ikke 400.
(For eksempel var ikke 1700, 1800 og 1900 skuddår, ei heller blir 2100 et)
 

Oppgaven:

Bruk testdrevet utvikling til å skrive funksjonen

bool isLeapYear(int year)
Oppgaven skal løses med Java og JUnit5, installert med maven eller gradle. 
Skriv tester som beskriver akseptansekravene og viser at algoritmen tilfredsstiller dem.

Leveransen skal inneholde zip av prosjektmappe.

Sjekk ut Lars-Erik sin video fra testinga om hvordan dere kan sette opp JUnit via Maven (Lenker til en ekstern side.)
https://www.youtube.com/watch?v=dZkYPbK7qUM&feature=emb_logo&ab_channel=Lars-ErikAabech 


Bonusøvelser:

Benytt Git underveis for å ta vare på endringene og lever med .git mappen for ekstra trening.
Legg til kravet om år som er delelige med 4000.
Test flere år pr. krav med @ParameterizedTest og @ValueSource
